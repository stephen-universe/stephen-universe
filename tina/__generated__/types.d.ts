//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** References another document, used as a foreign key */
  Reference: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  basename: Scalars['String']['output'];
  hasReferences?: Maybe<Scalars['Boolean']['output']>;
  breadcrumbs: Array<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  relativePath: Scalars['String']['output'];
  extension: Scalars['String']['output'];
  template: Scalars['String']['output'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Folder = {
  __typename?: 'Folder';
  name: Scalars['String']['output'];
  path: Scalars['String']['output'];
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean']['output'];
  hasNextPage: Scalars['Boolean']['output'];
  startCursor: Scalars['String']['output'];
  endCursor: Scalars['String']['output'];
};

export type Node = {
  id: Scalars['ID']['output'];
};

export type Document = {
  id: Scalars['ID']['output'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON']['output'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float']['output'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']['output']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  setting: Setting;
  settingConnection: SettingConnection;
  navigation: Navigation;
  navigationConnection: NavigationConnection;
  home: Home;
  homeConnection: HomeConnection;
  projects: Projects;
  projectsConnection: ProjectsConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String']['input'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QuerySettingArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QuerySettingConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<SettingFilter>;
};


export type QueryNavigationArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNavigationConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<NavigationFilter>;
};


export type QueryHomeArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryHomeConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<HomeFilter>;
};


export type QueryProjectsArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryProjectsConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ProjectsFilter>;
};

export type DocumentFilter = {
  setting?: InputMaybe<SettingFilter>;
  navigation?: InputMaybe<NavigationFilter>;
  home?: InputMaybe<HomeFilter>;
  projects?: InputMaybe<ProjectsFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  format?: Maybe<Scalars['String']['output']>;
  matches?: Maybe<Scalars['String']['output']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocumentFilter>;
  folder?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentNode = Setting | Navigation | Home | Projects | Folder;

export type SettingSiteSettings = {
  __typename?: 'SettingSiteSettings';
  siteName?: Maybe<Scalars['String']['output']>;
  siteOwner?: Maybe<Scalars['String']['output']>;
};

export type SettingPreloader = {
  __typename?: 'SettingPreloader';
  image?: Maybe<Scalars['String']['output']>;
  alt?: Maybe<Scalars['String']['output']>;
};

export type SettingCompanyLogo = {
  __typename?: 'SettingCompanyLogo';
  image?: Maybe<Scalars['String']['output']>;
  alt?: Maybe<Scalars['String']['output']>;
};

export type SettingSocialFb = {
  __typename?: 'SettingSocialFb';
  title?: Maybe<Scalars['String']['output']>;
  link?: Maybe<Scalars['String']['output']>;
};

export type SettingSocialIg = {
  __typename?: 'SettingSocialIg';
  title?: Maybe<Scalars['String']['output']>;
  link?: Maybe<Scalars['String']['output']>;
};

export type SettingSocialGithub = {
  __typename?: 'SettingSocialGithub';
  title?: Maybe<Scalars['String']['output']>;
  link?: Maybe<Scalars['String']['output']>;
};

export type SettingSocialLinkedin = {
  __typename?: 'SettingSocialLinkedin';
  title?: Maybe<Scalars['String']['output']>;
  link?: Maybe<Scalars['String']['output']>;
};

export type SettingSocial = {
  __typename?: 'SettingSocial';
  fb?: Maybe<SettingSocialFb>;
  ig?: Maybe<SettingSocialIg>;
  github?: Maybe<SettingSocialGithub>;
  linkedin?: Maybe<SettingSocialLinkedin>;
};

export type Setting = Node & Document & {
  __typename?: 'Setting';
  siteSettings?: Maybe<SettingSiteSettings>;
  preloader?: Maybe<SettingPreloader>;
  companyLogo?: Maybe<SettingCompanyLogo>;
  social?: Maybe<SettingSocial>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SettingSiteSettingsFilter = {
  siteName?: InputMaybe<StringFilter>;
  siteOwner?: InputMaybe<StringFilter>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SettingPreloaderFilter = {
  image?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type SettingCompanyLogoFilter = {
  image?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type SettingSocialFbFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
};

export type SettingSocialIgFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
};

export type SettingSocialGithubFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
};

export type SettingSocialLinkedinFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
};

export type SettingSocialFilter = {
  fb?: InputMaybe<SettingSocialFbFilter>;
  ig?: InputMaybe<SettingSocialIgFilter>;
  github?: InputMaybe<SettingSocialGithubFilter>;
  linkedin?: InputMaybe<SettingSocialLinkedinFilter>;
};

export type SettingFilter = {
  siteSettings?: InputMaybe<SettingSiteSettingsFilter>;
  preloader?: InputMaybe<SettingPreloaderFilter>;
  companyLogo?: InputMaybe<SettingCompanyLogoFilter>;
  social?: InputMaybe<SettingSocialFilter>;
};

export type SettingConnectionEdges = {
  __typename?: 'SettingConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Setting>;
};

export type SettingConnection = Connection & {
  __typename?: 'SettingConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<SettingConnectionEdges>>>;
};

export type NavigationNavigationLinksHeading = {
  __typename?: 'NavigationNavigationLinksHeading';
  mainText?: Maybe<Scalars['String']['output']>;
  subText?: Maybe<Scalars['String']['output']>;
};

export type NavigationNavigationLinks = {
  __typename?: 'NavigationNavigationLinks';
  link?: Maybe<Scalars['String']['output']>;
  heading?: Maybe<NavigationNavigationLinksHeading>;
  text?: Maybe<Scalars['String']['output']>;
};

export type NavigationFooterLinks = {
  __typename?: 'NavigationFooterLinks';
  text?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type NavigationFooterText = {
  __typename?: 'NavigationFooterText';
  text1?: Maybe<Scalars['String']['output']>;
  text2?: Maybe<Scalars['String']['output']>;
};

export type Navigation = Node & Document & {
  __typename?: 'Navigation';
  navigationLinks?: Maybe<Array<Maybe<NavigationNavigationLinks>>>;
  footerLinks?: Maybe<Array<Maybe<NavigationFooterLinks>>>;
  footerText?: Maybe<Array<Maybe<NavigationFooterText>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type NavigationNavigationLinksHeadingFilter = {
  mainText?: InputMaybe<StringFilter>;
  subText?: InputMaybe<StringFilter>;
};

export type NavigationNavigationLinksFilter = {
  link?: InputMaybe<StringFilter>;
  heading?: InputMaybe<NavigationNavigationLinksHeadingFilter>;
  text?: InputMaybe<StringFilter>;
};

export type NavigationFooterLinksFilter = {
  text?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type NavigationFooterTextFilter = {
  text1?: InputMaybe<StringFilter>;
  text2?: InputMaybe<StringFilter>;
};

export type NavigationFilter = {
  navigationLinks?: InputMaybe<NavigationNavigationLinksFilter>;
  footerLinks?: InputMaybe<NavigationFooterLinksFilter>;
  footerText?: InputMaybe<NavigationFooterTextFilter>;
};

export type NavigationConnectionEdges = {
  __typename?: 'NavigationConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Navigation>;
};

export type NavigationConnection = Connection & {
  __typename?: 'NavigationConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<NavigationConnectionEdges>>>;
};

export type HomeIntroLines = {
  __typename?: 'HomeIntroLines';
  line1?: Maybe<Scalars['String']['output']>;
  line2?: Maybe<Scalars['String']['output']>;
  line3?: Maybe<Scalars['String']['output']>;
  line4?: Maybe<Scalars['String']['output']>;
};

export type HomeDoorMessages = {
  __typename?: 'HomeDoorMessages';
  message1?: Maybe<Scalars['String']['output']>;
  message2?: Maybe<Scalars['String']['output']>;
  message3?: Maybe<Scalars['String']['output']>;
};

export type HomeCoreSystemsSkills = {
  __typename?: 'HomeCoreSystemsSkills';
  skill1?: Maybe<Scalars['String']['output']>;
  skill2?: Maybe<Scalars['String']['output']>;
  skill3?: Maybe<Scalars['String']['output']>;
  skill4?: Maybe<Scalars['String']['output']>;
  skill5?: Maybe<Scalars['String']['output']>;
};

export type HomeCoreSystems = {
  __typename?: 'HomeCoreSystems';
  title?: Maybe<Scalars['String']['output']>;
  desc?: Maybe<Scalars['String']['output']>;
  skills?: Maybe<HomeCoreSystemsSkills>;
};

export type HomeFieldSystemsSkills = {
  __typename?: 'HomeFieldSystemsSkills';
  skill1?: Maybe<Scalars['String']['output']>;
  skill2?: Maybe<Scalars['String']['output']>;
  skill3?: Maybe<Scalars['String']['output']>;
  skill4?: Maybe<Scalars['String']['output']>;
  skill5?: Maybe<Scalars['String']['output']>;
};

export type HomeFieldSystems = {
  __typename?: 'HomeFieldSystems';
  title?: Maybe<Scalars['String']['output']>;
  desc?: Maybe<Scalars['String']['output']>;
  skills?: Maybe<HomeFieldSystemsSkills>;
};

export type HomeCombinedStatement = {
  __typename?: 'HomeCombinedStatement';
  statement1?: Maybe<Scalars['String']['output']>;
  statement2?: Maybe<Scalars['String']['output']>;
};

export type HomeProjectSectionProjects = {
  __typename?: 'HomeProjectSectionProjects';
  image1?: Maybe<Scalars['String']['output']>;
  url1?: Maybe<Scalars['String']['output']>;
  image2?: Maybe<Scalars['String']['output']>;
  url2?: Maybe<Scalars['String']['output']>;
  image3?: Maybe<Scalars['String']['output']>;
  url3?: Maybe<Scalars['String']['output']>;
  image4?: Maybe<Scalars['String']['output']>;
  url4?: Maybe<Scalars['String']['output']>;
};

export type HomeProjectSectionViewAllLink = {
  __typename?: 'HomeProjectSectionViewAllLink';
  text?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type HomeProjectSection = {
  __typename?: 'HomeProjectSection';
  title?: Maybe<Scalars['String']['output']>;
  projects?: Maybe<Array<Maybe<HomeProjectSectionProjects>>>;
  viewAllLink?: Maybe<HomeProjectSectionViewAllLink>;
};

export type HomeQuoteLines = {
  __typename?: 'HomeQuoteLines';
  line?: Maybe<Scalars['String']['output']>;
};

export type HomeQuoteAttribution = {
  __typename?: 'HomeQuoteAttribution';
  signature?: Maybe<Scalars['String']['output']>;
  source?: Maybe<Scalars['String']['output']>;
};

export type HomeQuote = {
  __typename?: 'HomeQuote';
  lines?: Maybe<HomeQuoteLines>;
  attribution?: Maybe<HomeQuoteAttribution>;
};

export type HomeTimedQuoteQuoteParts = {
  __typename?: 'HomeTimedQuoteQuoteParts';
  text?: Maybe<Scalars['String']['output']>;
  delay?: Maybe<Scalars['Float']['output']>;
};

export type HomeTimedQuote = {
  __typename?: 'HomeTimedQuote';
  quoteParts?: Maybe<Array<Maybe<HomeTimedQuoteQuoteParts>>>;
};

export type HomeContact = {
  __typename?: 'HomeContact';
  link?: Maybe<Scalars['String']['output']>;
  buttonText?: Maybe<Scalars['String']['output']>;
};

export type Home = Node & Document & {
  __typename?: 'Home';
  rotatingWords?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  introLines?: Maybe<HomeIntroLines>;
  doorMessages?: Maybe<HomeDoorMessages>;
  coreSystems?: Maybe<HomeCoreSystems>;
  fieldSystems?: Maybe<HomeFieldSystems>;
  combinedStatement?: Maybe<HomeCombinedStatement>;
  projectSection?: Maybe<HomeProjectSection>;
  quote?: Maybe<HomeQuote>;
  timedQuote?: Maybe<HomeTimedQuote>;
  contact?: Maybe<HomeContact>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type HomeIntroLinesFilter = {
  line1?: InputMaybe<StringFilter>;
  line2?: InputMaybe<StringFilter>;
  line3?: InputMaybe<StringFilter>;
  line4?: InputMaybe<StringFilter>;
};

export type HomeDoorMessagesFilter = {
  message1?: InputMaybe<StringFilter>;
  message2?: InputMaybe<StringFilter>;
  message3?: InputMaybe<StringFilter>;
};

export type HomeCoreSystemsSkillsFilter = {
  skill1?: InputMaybe<StringFilter>;
  skill2?: InputMaybe<StringFilter>;
  skill3?: InputMaybe<StringFilter>;
  skill4?: InputMaybe<StringFilter>;
  skill5?: InputMaybe<StringFilter>;
};

export type HomeCoreSystemsFilter = {
  title?: InputMaybe<StringFilter>;
  desc?: InputMaybe<StringFilter>;
  skills?: InputMaybe<HomeCoreSystemsSkillsFilter>;
};

export type HomeFieldSystemsSkillsFilter = {
  skill1?: InputMaybe<StringFilter>;
  skill2?: InputMaybe<StringFilter>;
  skill3?: InputMaybe<StringFilter>;
  skill4?: InputMaybe<StringFilter>;
  skill5?: InputMaybe<StringFilter>;
};

export type HomeFieldSystemsFilter = {
  title?: InputMaybe<StringFilter>;
  desc?: InputMaybe<StringFilter>;
  skills?: InputMaybe<HomeFieldSystemsSkillsFilter>;
};

export type HomeCombinedStatementFilter = {
  statement1?: InputMaybe<StringFilter>;
  statement2?: InputMaybe<StringFilter>;
};

export type HomeProjectSectionProjectsFilter = {
  image1?: InputMaybe<ImageFilter>;
  url1?: InputMaybe<StringFilter>;
  image2?: InputMaybe<ImageFilter>;
  url2?: InputMaybe<StringFilter>;
  image3?: InputMaybe<ImageFilter>;
  url3?: InputMaybe<StringFilter>;
  image4?: InputMaybe<ImageFilter>;
  url4?: InputMaybe<StringFilter>;
};

export type HomeProjectSectionViewAllLinkFilter = {
  text?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type HomeProjectSectionFilter = {
  title?: InputMaybe<StringFilter>;
  projects?: InputMaybe<HomeProjectSectionProjectsFilter>;
  viewAllLink?: InputMaybe<HomeProjectSectionViewAllLinkFilter>;
};

export type HomeQuoteLinesFilter = {
  line?: InputMaybe<StringFilter>;
};

export type HomeQuoteAttributionFilter = {
  signature?: InputMaybe<StringFilter>;
  source?: InputMaybe<StringFilter>;
};

export type HomeQuoteFilter = {
  lines?: InputMaybe<HomeQuoteLinesFilter>;
  attribution?: InputMaybe<HomeQuoteAttributionFilter>;
};

export type NumberFilter = {
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  eq?: InputMaybe<Scalars['Float']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
};

export type HomeTimedQuoteQuotePartsFilter = {
  text?: InputMaybe<StringFilter>;
  delay?: InputMaybe<NumberFilter>;
};

export type HomeTimedQuoteFilter = {
  quoteParts?: InputMaybe<HomeTimedQuoteQuotePartsFilter>;
};

export type HomeContactFilter = {
  link?: InputMaybe<StringFilter>;
  buttonText?: InputMaybe<StringFilter>;
};

export type HomeFilter = {
  rotatingWords?: InputMaybe<StringFilter>;
  introLines?: InputMaybe<HomeIntroLinesFilter>;
  doorMessages?: InputMaybe<HomeDoorMessagesFilter>;
  coreSystems?: InputMaybe<HomeCoreSystemsFilter>;
  fieldSystems?: InputMaybe<HomeFieldSystemsFilter>;
  combinedStatement?: InputMaybe<HomeCombinedStatementFilter>;
  projectSection?: InputMaybe<HomeProjectSectionFilter>;
  quote?: InputMaybe<HomeQuoteFilter>;
  timedQuote?: InputMaybe<HomeTimedQuoteFilter>;
  contact?: InputMaybe<HomeContactFilter>;
};

export type HomeConnectionEdges = {
  __typename?: 'HomeConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Home>;
};

export type HomeConnection = Connection & {
  __typename?: 'HomeConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<HomeConnectionEdges>>>;
};

export type ProjectsLogofolioMeta = {
  __typename?: 'ProjectsLogofolioMeta';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  speed?: Maybe<Scalars['Float']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type ProjectsLogofolioProjectImages = {
  __typename?: 'ProjectsLogofolioProjectImages';
  white?: Maybe<Scalars['String']['output']>;
  black?: Maybe<Scalars['String']['output']>;
};

export type ProjectsLogofolioProject = {
  __typename?: 'ProjectsLogofolioProject';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  images?: Maybe<ProjectsLogofolioProjectImages>;
  image?: Maybe<Scalars['String']['output']>;
};

export type ProjectsLogofolio = {
  __typename?: 'ProjectsLogofolio';
  meta?: Maybe<ProjectsLogofolioMeta>;
  project?: Maybe<Array<Maybe<ProjectsLogofolioProject>>>;
};

export type ProjectsAnaRoseMeta = {
  __typename?: 'ProjectsAnaRoseMeta';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  speed?: Maybe<Scalars['Float']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type ProjectsAnaRoseProject = {
  __typename?: 'ProjectsAnaRoseProject';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
};

export type ProjectsAnaRose = {
  __typename?: 'ProjectsAnaRose';
  meta?: Maybe<ProjectsAnaRoseMeta>;
  project?: Maybe<Array<Maybe<ProjectsAnaRoseProject>>>;
};

export type ProjectsQueendomFarmsMeta = {
  __typename?: 'ProjectsQueendomFarmsMeta';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  speed?: Maybe<Scalars['Float']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type ProjectsQueendomFarmsProject = {
  __typename?: 'ProjectsQueendomFarmsProject';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
};

export type ProjectsQueendomFarms = {
  __typename?: 'ProjectsQueendomFarms';
  meta?: Maybe<ProjectsQueendomFarmsMeta>;
  project?: Maybe<Array<Maybe<ProjectsQueendomFarmsProject>>>;
};

export type ProjectsEpicFutureMeta = {
  __typename?: 'ProjectsEpicFutureMeta';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  speed?: Maybe<Scalars['Float']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type ProjectsEpicFutureProject = {
  __typename?: 'ProjectsEpicFutureProject';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
};

export type ProjectsEpicFuture = {
  __typename?: 'ProjectsEpicFuture';
  meta?: Maybe<ProjectsEpicFutureMeta>;
  project?: Maybe<Array<Maybe<ProjectsEpicFutureProject>>>;
};

export type ProjectsConsolidatedConstructionSolutionsMeta = {
  __typename?: 'ProjectsConsolidatedConstructionSolutionsMeta';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  speed?: Maybe<Scalars['Float']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type ProjectsConsolidatedConstructionSolutionsProject = {
  __typename?: 'ProjectsConsolidatedConstructionSolutionsProject';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
};

export type ProjectsConsolidatedConstructionSolutions = {
  __typename?: 'ProjectsConsolidatedConstructionSolutions';
  meta?: Maybe<ProjectsConsolidatedConstructionSolutionsMeta>;
  project?: Maybe<Array<Maybe<ProjectsConsolidatedConstructionSolutionsProject>>>;
};

export type ProjectsPerfectlyDifferentMeta = {
  __typename?: 'ProjectsPerfectlyDifferentMeta';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  speed?: Maybe<Scalars['Float']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type ProjectsPerfectlyDifferentProject = {
  __typename?: 'ProjectsPerfectlyDifferentProject';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
};

export type ProjectsPerfectlyDifferent = {
  __typename?: 'ProjectsPerfectlyDifferent';
  meta?: Maybe<ProjectsPerfectlyDifferentMeta>;
  project?: Maybe<Array<Maybe<ProjectsPerfectlyDifferentProject>>>;
};

export type Projects = Node & Document & {
  __typename?: 'Projects';
  logofolio?: Maybe<ProjectsLogofolio>;
  anaRose?: Maybe<ProjectsAnaRose>;
  queendomFarms?: Maybe<ProjectsQueendomFarms>;
  epicFuture?: Maybe<ProjectsEpicFuture>;
  consolidatedConstructionSolutions?: Maybe<ProjectsConsolidatedConstructionSolutions>;
  perfectlyDifferent?: Maybe<ProjectsPerfectlyDifferent>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type ProjectsLogofolioMetaFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  speed?: InputMaybe<NumberFilter>;
  url?: InputMaybe<StringFilter>;
};

export type ProjectsLogofolioProjectImagesFilter = {
  white?: InputMaybe<ImageFilter>;
  black?: InputMaybe<ImageFilter>;
};

export type ProjectsLogofolioProjectFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  images?: InputMaybe<ProjectsLogofolioProjectImagesFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type ProjectsLogofolioFilter = {
  meta?: InputMaybe<ProjectsLogofolioMetaFilter>;
  project?: InputMaybe<ProjectsLogofolioProjectFilter>;
};

export type ProjectsAnaRoseMetaFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  speed?: InputMaybe<NumberFilter>;
  url?: InputMaybe<StringFilter>;
};

export type ProjectsAnaRoseProjectFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type ProjectsAnaRoseFilter = {
  meta?: InputMaybe<ProjectsAnaRoseMetaFilter>;
  project?: InputMaybe<ProjectsAnaRoseProjectFilter>;
};

export type ProjectsQueendomFarmsMetaFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  speed?: InputMaybe<NumberFilter>;
  url?: InputMaybe<StringFilter>;
};

export type ProjectsQueendomFarmsProjectFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type ProjectsQueendomFarmsFilter = {
  meta?: InputMaybe<ProjectsQueendomFarmsMetaFilter>;
  project?: InputMaybe<ProjectsQueendomFarmsProjectFilter>;
};

export type ProjectsEpicFutureMetaFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  speed?: InputMaybe<NumberFilter>;
  url?: InputMaybe<StringFilter>;
};

export type ProjectsEpicFutureProjectFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type ProjectsEpicFutureFilter = {
  meta?: InputMaybe<ProjectsEpicFutureMetaFilter>;
  project?: InputMaybe<ProjectsEpicFutureProjectFilter>;
};

export type ProjectsConsolidatedConstructionSolutionsMetaFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  speed?: InputMaybe<NumberFilter>;
  url?: InputMaybe<StringFilter>;
};

export type ProjectsConsolidatedConstructionSolutionsProjectFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type ProjectsConsolidatedConstructionSolutionsFilter = {
  meta?: InputMaybe<ProjectsConsolidatedConstructionSolutionsMetaFilter>;
  project?: InputMaybe<ProjectsConsolidatedConstructionSolutionsProjectFilter>;
};

export type ProjectsPerfectlyDifferentMetaFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  speed?: InputMaybe<NumberFilter>;
  url?: InputMaybe<StringFilter>;
};

export type ProjectsPerfectlyDifferentProjectFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type ProjectsPerfectlyDifferentFilter = {
  meta?: InputMaybe<ProjectsPerfectlyDifferentMetaFilter>;
  project?: InputMaybe<ProjectsPerfectlyDifferentProjectFilter>;
};

export type ProjectsFilter = {
  logofolio?: InputMaybe<ProjectsLogofolioFilter>;
  anaRose?: InputMaybe<ProjectsAnaRoseFilter>;
  queendomFarms?: InputMaybe<ProjectsQueendomFarmsFilter>;
  epicFuture?: InputMaybe<ProjectsEpicFutureFilter>;
  consolidatedConstructionSolutions?: InputMaybe<ProjectsConsolidatedConstructionSolutionsFilter>;
  perfectlyDifferent?: InputMaybe<ProjectsPerfectlyDifferentFilter>;
};

export type ProjectsConnectionEdges = {
  __typename?: 'ProjectsConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Projects>;
};

export type ProjectsConnection = Connection & {
  __typename?: 'ProjectsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<ProjectsConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  createFolder: DocumentNode;
  updateSetting: Setting;
  createSetting: Setting;
  updateNavigation: Navigation;
  createNavigation: Navigation;
  updateHome: Home;
  createHome: Home;
  updateProjects: Projects;
  createProjects: Projects;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String']['input'];
  relativePath: Scalars['String']['input'];
  template?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentMutation;
};


export type MutationCreateFolderArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationUpdateSettingArgs = {
  relativePath: Scalars['String']['input'];
  params: SettingMutation;
};


export type MutationCreateSettingArgs = {
  relativePath: Scalars['String']['input'];
  params: SettingMutation;
};


export type MutationUpdateNavigationArgs = {
  relativePath: Scalars['String']['input'];
  params: NavigationMutation;
};


export type MutationCreateNavigationArgs = {
  relativePath: Scalars['String']['input'];
  params: NavigationMutation;
};


export type MutationUpdateHomeArgs = {
  relativePath: Scalars['String']['input'];
  params: HomeMutation;
};


export type MutationCreateHomeArgs = {
  relativePath: Scalars['String']['input'];
  params: HomeMutation;
};


export type MutationUpdateProjectsArgs = {
  relativePath: Scalars['String']['input'];
  params: ProjectsMutation;
};


export type MutationCreateProjectsArgs = {
  relativePath: Scalars['String']['input'];
  params: ProjectsMutation;
};

export type DocumentUpdateMutation = {
  setting?: InputMaybe<SettingMutation>;
  navigation?: InputMaybe<NavigationMutation>;
  home?: InputMaybe<HomeMutation>;
  projects?: InputMaybe<ProjectsMutation>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentMutation = {
  setting?: InputMaybe<SettingMutation>;
  navigation?: InputMaybe<NavigationMutation>;
  home?: InputMaybe<HomeMutation>;
  projects?: InputMaybe<ProjectsMutation>;
};

export type SettingSiteSettingsMutation = {
  siteName?: InputMaybe<Scalars['String']['input']>;
  siteOwner?: InputMaybe<Scalars['String']['input']>;
};

export type SettingPreloaderMutation = {
  image?: InputMaybe<Scalars['String']['input']>;
  alt?: InputMaybe<Scalars['String']['input']>;
};

export type SettingCompanyLogoMutation = {
  image?: InputMaybe<Scalars['String']['input']>;
  alt?: InputMaybe<Scalars['String']['input']>;
};

export type SettingSocialFbMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
};

export type SettingSocialIgMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
};

export type SettingSocialGithubMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
};

export type SettingSocialLinkedinMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
};

export type SettingSocialMutation = {
  fb?: InputMaybe<SettingSocialFbMutation>;
  ig?: InputMaybe<SettingSocialIgMutation>;
  github?: InputMaybe<SettingSocialGithubMutation>;
  linkedin?: InputMaybe<SettingSocialLinkedinMutation>;
};

export type SettingMutation = {
  siteSettings?: InputMaybe<SettingSiteSettingsMutation>;
  preloader?: InputMaybe<SettingPreloaderMutation>;
  companyLogo?: InputMaybe<SettingCompanyLogoMutation>;
  social?: InputMaybe<SettingSocialMutation>;
};

export type NavigationNavigationLinksHeadingMutation = {
  mainText?: InputMaybe<Scalars['String']['input']>;
  subText?: InputMaybe<Scalars['String']['input']>;
};

export type NavigationNavigationLinksMutation = {
  link?: InputMaybe<Scalars['String']['input']>;
  heading?: InputMaybe<NavigationNavigationLinksHeadingMutation>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type NavigationFooterLinksMutation = {
  text?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type NavigationFooterTextMutation = {
  text1?: InputMaybe<Scalars['String']['input']>;
  text2?: InputMaybe<Scalars['String']['input']>;
};

export type NavigationMutation = {
  navigationLinks?: InputMaybe<Array<InputMaybe<NavigationNavigationLinksMutation>>>;
  footerLinks?: InputMaybe<Array<InputMaybe<NavigationFooterLinksMutation>>>;
  footerText?: InputMaybe<Array<InputMaybe<NavigationFooterTextMutation>>>;
};

export type HomeIntroLinesMutation = {
  line1?: InputMaybe<Scalars['String']['input']>;
  line2?: InputMaybe<Scalars['String']['input']>;
  line3?: InputMaybe<Scalars['String']['input']>;
  line4?: InputMaybe<Scalars['String']['input']>;
};

export type HomeDoorMessagesMutation = {
  message1?: InputMaybe<Scalars['String']['input']>;
  message2?: InputMaybe<Scalars['String']['input']>;
  message3?: InputMaybe<Scalars['String']['input']>;
};

export type HomeCoreSystemsSkillsMutation = {
  skill1?: InputMaybe<Scalars['String']['input']>;
  skill2?: InputMaybe<Scalars['String']['input']>;
  skill3?: InputMaybe<Scalars['String']['input']>;
  skill4?: InputMaybe<Scalars['String']['input']>;
  skill5?: InputMaybe<Scalars['String']['input']>;
};

export type HomeCoreSystemsMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  desc?: InputMaybe<Scalars['String']['input']>;
  skills?: InputMaybe<HomeCoreSystemsSkillsMutation>;
};

export type HomeFieldSystemsSkillsMutation = {
  skill1?: InputMaybe<Scalars['String']['input']>;
  skill2?: InputMaybe<Scalars['String']['input']>;
  skill3?: InputMaybe<Scalars['String']['input']>;
  skill4?: InputMaybe<Scalars['String']['input']>;
  skill5?: InputMaybe<Scalars['String']['input']>;
};

export type HomeFieldSystemsMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  desc?: InputMaybe<Scalars['String']['input']>;
  skills?: InputMaybe<HomeFieldSystemsSkillsMutation>;
};

export type HomeCombinedStatementMutation = {
  statement1?: InputMaybe<Scalars['String']['input']>;
  statement2?: InputMaybe<Scalars['String']['input']>;
};

export type HomeProjectSectionProjectsMutation = {
  image1?: InputMaybe<Scalars['String']['input']>;
  url1?: InputMaybe<Scalars['String']['input']>;
  image2?: InputMaybe<Scalars['String']['input']>;
  url2?: InputMaybe<Scalars['String']['input']>;
  image3?: InputMaybe<Scalars['String']['input']>;
  url3?: InputMaybe<Scalars['String']['input']>;
  image4?: InputMaybe<Scalars['String']['input']>;
  url4?: InputMaybe<Scalars['String']['input']>;
};

export type HomeProjectSectionViewAllLinkMutation = {
  text?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type HomeProjectSectionMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<Array<InputMaybe<HomeProjectSectionProjectsMutation>>>;
  viewAllLink?: InputMaybe<HomeProjectSectionViewAllLinkMutation>;
};

export type HomeQuoteLinesMutation = {
  line?: InputMaybe<Scalars['String']['input']>;
};

export type HomeQuoteAttributionMutation = {
  signature?: InputMaybe<Scalars['String']['input']>;
  source?: InputMaybe<Scalars['String']['input']>;
};

export type HomeQuoteMutation = {
  lines?: InputMaybe<HomeQuoteLinesMutation>;
  attribution?: InputMaybe<HomeQuoteAttributionMutation>;
};

export type HomeTimedQuoteQuotePartsMutation = {
  text?: InputMaybe<Scalars['String']['input']>;
  delay?: InputMaybe<Scalars['Float']['input']>;
};

export type HomeTimedQuoteMutation = {
  quoteParts?: InputMaybe<Array<InputMaybe<HomeTimedQuoteQuotePartsMutation>>>;
};

export type HomeContactMutation = {
  link?: InputMaybe<Scalars['String']['input']>;
  buttonText?: InputMaybe<Scalars['String']['input']>;
};

export type HomeMutation = {
  rotatingWords?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  introLines?: InputMaybe<HomeIntroLinesMutation>;
  doorMessages?: InputMaybe<HomeDoorMessagesMutation>;
  coreSystems?: InputMaybe<HomeCoreSystemsMutation>;
  fieldSystems?: InputMaybe<HomeFieldSystemsMutation>;
  combinedStatement?: InputMaybe<HomeCombinedStatementMutation>;
  projectSection?: InputMaybe<HomeProjectSectionMutation>;
  quote?: InputMaybe<HomeQuoteMutation>;
  timedQuote?: InputMaybe<HomeTimedQuoteMutation>;
  contact?: InputMaybe<HomeContactMutation>;
};

export type ProjectsLogofolioMetaMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  speed?: InputMaybe<Scalars['Float']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsLogofolioProjectImagesMutation = {
  white?: InputMaybe<Scalars['String']['input']>;
  black?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsLogofolioProjectMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  images?: InputMaybe<ProjectsLogofolioProjectImagesMutation>;
  image?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsLogofolioMutation = {
  meta?: InputMaybe<ProjectsLogofolioMetaMutation>;
  project?: InputMaybe<Array<InputMaybe<ProjectsLogofolioProjectMutation>>>;
};

export type ProjectsAnaRoseMetaMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  speed?: InputMaybe<Scalars['Float']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsAnaRoseProjectMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsAnaRoseMutation = {
  meta?: InputMaybe<ProjectsAnaRoseMetaMutation>;
  project?: InputMaybe<Array<InputMaybe<ProjectsAnaRoseProjectMutation>>>;
};

export type ProjectsQueendomFarmsMetaMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  speed?: InputMaybe<Scalars['Float']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsQueendomFarmsProjectMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsQueendomFarmsMutation = {
  meta?: InputMaybe<ProjectsQueendomFarmsMetaMutation>;
  project?: InputMaybe<Array<InputMaybe<ProjectsQueendomFarmsProjectMutation>>>;
};

export type ProjectsEpicFutureMetaMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  speed?: InputMaybe<Scalars['Float']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsEpicFutureProjectMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsEpicFutureMutation = {
  meta?: InputMaybe<ProjectsEpicFutureMetaMutation>;
  project?: InputMaybe<Array<InputMaybe<ProjectsEpicFutureProjectMutation>>>;
};

export type ProjectsConsolidatedConstructionSolutionsMetaMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  speed?: InputMaybe<Scalars['Float']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsConsolidatedConstructionSolutionsProjectMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsConsolidatedConstructionSolutionsMutation = {
  meta?: InputMaybe<ProjectsConsolidatedConstructionSolutionsMetaMutation>;
  project?: InputMaybe<Array<InputMaybe<ProjectsConsolidatedConstructionSolutionsProjectMutation>>>;
};

export type ProjectsPerfectlyDifferentMetaMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  speed?: InputMaybe<Scalars['Float']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsPerfectlyDifferentProjectMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectsPerfectlyDifferentMutation = {
  meta?: InputMaybe<ProjectsPerfectlyDifferentMetaMutation>;
  project?: InputMaybe<Array<InputMaybe<ProjectsPerfectlyDifferentProjectMutation>>>;
};

export type ProjectsMutation = {
  logofolio?: InputMaybe<ProjectsLogofolioMutation>;
  anaRose?: InputMaybe<ProjectsAnaRoseMutation>;
  queendomFarms?: InputMaybe<ProjectsQueendomFarmsMutation>;
  epicFuture?: InputMaybe<ProjectsEpicFutureMutation>;
  consolidatedConstructionSolutions?: InputMaybe<ProjectsConsolidatedConstructionSolutionsMutation>;
  perfectlyDifferent?: InputMaybe<ProjectsPerfectlyDifferentMutation>;
};

export type SettingPartsFragment = { __typename: 'Setting', siteSettings?: { __typename: 'SettingSiteSettings', siteName?: string | null, siteOwner?: string | null } | null, preloader?: { __typename: 'SettingPreloader', image?: string | null, alt?: string | null } | null, companyLogo?: { __typename: 'SettingCompanyLogo', image?: string | null, alt?: string | null } | null, social?: { __typename: 'SettingSocial', fb?: { __typename: 'SettingSocialFb', title?: string | null, link?: string | null } | null, ig?: { __typename: 'SettingSocialIg', title?: string | null, link?: string | null } | null, github?: { __typename: 'SettingSocialGithub', title?: string | null, link?: string | null } | null, linkedin?: { __typename: 'SettingSocialLinkedin', title?: string | null, link?: string | null } | null } | null };

export type NavigationPartsFragment = { __typename: 'Navigation', navigationLinks?: Array<{ __typename: 'NavigationNavigationLinks', link?: string | null, text?: string | null, heading?: { __typename: 'NavigationNavigationLinksHeading', mainText?: string | null, subText?: string | null } | null } | null> | null, footerLinks?: Array<{ __typename: 'NavigationFooterLinks', text?: string | null, url?: string | null } | null> | null, footerText?: Array<{ __typename: 'NavigationFooterText', text1?: string | null, text2?: string | null } | null> | null };

export type HomePartsFragment = { __typename: 'Home', rotatingWords?: Array<string | null> | null, introLines?: { __typename: 'HomeIntroLines', line1?: string | null, line2?: string | null, line3?: string | null, line4?: string | null } | null, doorMessages?: { __typename: 'HomeDoorMessages', message1?: string | null, message2?: string | null, message3?: string | null } | null, coreSystems?: { __typename: 'HomeCoreSystems', title?: string | null, desc?: string | null, skills?: { __typename: 'HomeCoreSystemsSkills', skill1?: string | null, skill2?: string | null, skill3?: string | null, skill4?: string | null, skill5?: string | null } | null } | null, fieldSystems?: { __typename: 'HomeFieldSystems', title?: string | null, desc?: string | null, skills?: { __typename: 'HomeFieldSystemsSkills', skill1?: string | null, skill2?: string | null, skill3?: string | null, skill4?: string | null, skill5?: string | null } | null } | null, combinedStatement?: { __typename: 'HomeCombinedStatement', statement1?: string | null, statement2?: string | null } | null, projectSection?: { __typename: 'HomeProjectSection', title?: string | null, projects?: Array<{ __typename: 'HomeProjectSectionProjects', image1?: string | null, url1?: string | null, image2?: string | null, url2?: string | null, image3?: string | null, url3?: string | null, image4?: string | null, url4?: string | null } | null> | null, viewAllLink?: { __typename: 'HomeProjectSectionViewAllLink', text?: string | null, url?: string | null } | null } | null, quote?: { __typename: 'HomeQuote', lines?: { __typename: 'HomeQuoteLines', line?: string | null } | null, attribution?: { __typename: 'HomeQuoteAttribution', signature?: string | null, source?: string | null } | null } | null, timedQuote?: { __typename: 'HomeTimedQuote', quoteParts?: Array<{ __typename: 'HomeTimedQuoteQuoteParts', text?: string | null, delay?: number | null } | null> | null } | null, contact?: { __typename: 'HomeContact', link?: string | null, buttonText?: string | null } | null };

export type ProjectsPartsFragment = { __typename: 'Projects', logofolio?: { __typename: 'ProjectsLogofolio', meta?: { __typename: 'ProjectsLogofolioMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsLogofolioProject', title?: string | null, description?: string | null, image?: string | null, images?: { __typename: 'ProjectsLogofolioProjectImages', white?: string | null, black?: string | null } | null } | null> | null } | null, anaRose?: { __typename: 'ProjectsAnaRose', meta?: { __typename: 'ProjectsAnaRoseMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsAnaRoseProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, queendomFarms?: { __typename: 'ProjectsQueendomFarms', meta?: { __typename: 'ProjectsQueendomFarmsMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsQueendomFarmsProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, epicFuture?: { __typename: 'ProjectsEpicFuture', meta?: { __typename: 'ProjectsEpicFutureMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsEpicFutureProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, consolidatedConstructionSolutions?: { __typename: 'ProjectsConsolidatedConstructionSolutions', meta?: { __typename: 'ProjectsConsolidatedConstructionSolutionsMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsConsolidatedConstructionSolutionsProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, perfectlyDifferent?: { __typename: 'ProjectsPerfectlyDifferent', meta?: { __typename: 'ProjectsPerfectlyDifferentMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsPerfectlyDifferentProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null };

export type SettingQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type SettingQuery = { __typename?: 'Query', setting: { __typename: 'Setting', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, siteSettings?: { __typename: 'SettingSiteSettings', siteName?: string | null, siteOwner?: string | null } | null, preloader?: { __typename: 'SettingPreloader', image?: string | null, alt?: string | null } | null, companyLogo?: { __typename: 'SettingCompanyLogo', image?: string | null, alt?: string | null } | null, social?: { __typename: 'SettingSocial', fb?: { __typename: 'SettingSocialFb', title?: string | null, link?: string | null } | null, ig?: { __typename: 'SettingSocialIg', title?: string | null, link?: string | null } | null, github?: { __typename: 'SettingSocialGithub', title?: string | null, link?: string | null } | null, linkedin?: { __typename: 'SettingSocialLinkedin', title?: string | null, link?: string | null } | null } | null } };

export type SettingConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<SettingFilter>;
}>;


export type SettingConnectionQuery = { __typename?: 'Query', settingConnection: { __typename?: 'SettingConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'SettingConnectionEdges', cursor: string, node?: { __typename: 'Setting', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, siteSettings?: { __typename: 'SettingSiteSettings', siteName?: string | null, siteOwner?: string | null } | null, preloader?: { __typename: 'SettingPreloader', image?: string | null, alt?: string | null } | null, companyLogo?: { __typename: 'SettingCompanyLogo', image?: string | null, alt?: string | null } | null, social?: { __typename: 'SettingSocial', fb?: { __typename: 'SettingSocialFb', title?: string | null, link?: string | null } | null, ig?: { __typename: 'SettingSocialIg', title?: string | null, link?: string | null } | null, github?: { __typename: 'SettingSocialGithub', title?: string | null, link?: string | null } | null, linkedin?: { __typename: 'SettingSocialLinkedin', title?: string | null, link?: string | null } | null } | null } | null } | null> | null } };

export type NavigationQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type NavigationQuery = { __typename?: 'Query', navigation: { __typename: 'Navigation', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, navigationLinks?: Array<{ __typename: 'NavigationNavigationLinks', link?: string | null, text?: string | null, heading?: { __typename: 'NavigationNavigationLinksHeading', mainText?: string | null, subText?: string | null } | null } | null> | null, footerLinks?: Array<{ __typename: 'NavigationFooterLinks', text?: string | null, url?: string | null } | null> | null, footerText?: Array<{ __typename: 'NavigationFooterText', text1?: string | null, text2?: string | null } | null> | null } };

export type NavigationConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<NavigationFilter>;
}>;


export type NavigationConnectionQuery = { __typename?: 'Query', navigationConnection: { __typename?: 'NavigationConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'NavigationConnectionEdges', cursor: string, node?: { __typename: 'Navigation', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, navigationLinks?: Array<{ __typename: 'NavigationNavigationLinks', link?: string | null, text?: string | null, heading?: { __typename: 'NavigationNavigationLinksHeading', mainText?: string | null, subText?: string | null } | null } | null> | null, footerLinks?: Array<{ __typename: 'NavigationFooterLinks', text?: string | null, url?: string | null } | null> | null, footerText?: Array<{ __typename: 'NavigationFooterText', text1?: string | null, text2?: string | null } | null> | null } | null } | null> | null } };

export type HomeQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type HomeQuery = { __typename?: 'Query', home: { __typename: 'Home', id: string, rotatingWords?: Array<string | null> | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, introLines?: { __typename: 'HomeIntroLines', line1?: string | null, line2?: string | null, line3?: string | null, line4?: string | null } | null, doorMessages?: { __typename: 'HomeDoorMessages', message1?: string | null, message2?: string | null, message3?: string | null } | null, coreSystems?: { __typename: 'HomeCoreSystems', title?: string | null, desc?: string | null, skills?: { __typename: 'HomeCoreSystemsSkills', skill1?: string | null, skill2?: string | null, skill3?: string | null, skill4?: string | null, skill5?: string | null } | null } | null, fieldSystems?: { __typename: 'HomeFieldSystems', title?: string | null, desc?: string | null, skills?: { __typename: 'HomeFieldSystemsSkills', skill1?: string | null, skill2?: string | null, skill3?: string | null, skill4?: string | null, skill5?: string | null } | null } | null, combinedStatement?: { __typename: 'HomeCombinedStatement', statement1?: string | null, statement2?: string | null } | null, projectSection?: { __typename: 'HomeProjectSection', title?: string | null, projects?: Array<{ __typename: 'HomeProjectSectionProjects', image1?: string | null, url1?: string | null, image2?: string | null, url2?: string | null, image3?: string | null, url3?: string | null, image4?: string | null, url4?: string | null } | null> | null, viewAllLink?: { __typename: 'HomeProjectSectionViewAllLink', text?: string | null, url?: string | null } | null } | null, quote?: { __typename: 'HomeQuote', lines?: { __typename: 'HomeQuoteLines', line?: string | null } | null, attribution?: { __typename: 'HomeQuoteAttribution', signature?: string | null, source?: string | null } | null } | null, timedQuote?: { __typename: 'HomeTimedQuote', quoteParts?: Array<{ __typename: 'HomeTimedQuoteQuoteParts', text?: string | null, delay?: number | null } | null> | null } | null, contact?: { __typename: 'HomeContact', link?: string | null, buttonText?: string | null } | null } };

export type HomeConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<HomeFilter>;
}>;


export type HomeConnectionQuery = { __typename?: 'Query', homeConnection: { __typename?: 'HomeConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'HomeConnectionEdges', cursor: string, node?: { __typename: 'Home', id: string, rotatingWords?: Array<string | null> | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, introLines?: { __typename: 'HomeIntroLines', line1?: string | null, line2?: string | null, line3?: string | null, line4?: string | null } | null, doorMessages?: { __typename: 'HomeDoorMessages', message1?: string | null, message2?: string | null, message3?: string | null } | null, coreSystems?: { __typename: 'HomeCoreSystems', title?: string | null, desc?: string | null, skills?: { __typename: 'HomeCoreSystemsSkills', skill1?: string | null, skill2?: string | null, skill3?: string | null, skill4?: string | null, skill5?: string | null } | null } | null, fieldSystems?: { __typename: 'HomeFieldSystems', title?: string | null, desc?: string | null, skills?: { __typename: 'HomeFieldSystemsSkills', skill1?: string | null, skill2?: string | null, skill3?: string | null, skill4?: string | null, skill5?: string | null } | null } | null, combinedStatement?: { __typename: 'HomeCombinedStatement', statement1?: string | null, statement2?: string | null } | null, projectSection?: { __typename: 'HomeProjectSection', title?: string | null, projects?: Array<{ __typename: 'HomeProjectSectionProjects', image1?: string | null, url1?: string | null, image2?: string | null, url2?: string | null, image3?: string | null, url3?: string | null, image4?: string | null, url4?: string | null } | null> | null, viewAllLink?: { __typename: 'HomeProjectSectionViewAllLink', text?: string | null, url?: string | null } | null } | null, quote?: { __typename: 'HomeQuote', lines?: { __typename: 'HomeQuoteLines', line?: string | null } | null, attribution?: { __typename: 'HomeQuoteAttribution', signature?: string | null, source?: string | null } | null } | null, timedQuote?: { __typename: 'HomeTimedQuote', quoteParts?: Array<{ __typename: 'HomeTimedQuoteQuoteParts', text?: string | null, delay?: number | null } | null> | null } | null, contact?: { __typename: 'HomeContact', link?: string | null, buttonText?: string | null } | null } | null } | null> | null } };

export type ProjectsQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type ProjectsQuery = { __typename?: 'Query', projects: { __typename: 'Projects', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, logofolio?: { __typename: 'ProjectsLogofolio', meta?: { __typename: 'ProjectsLogofolioMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsLogofolioProject', title?: string | null, description?: string | null, image?: string | null, images?: { __typename: 'ProjectsLogofolioProjectImages', white?: string | null, black?: string | null } | null } | null> | null } | null, anaRose?: { __typename: 'ProjectsAnaRose', meta?: { __typename: 'ProjectsAnaRoseMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsAnaRoseProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, queendomFarms?: { __typename: 'ProjectsQueendomFarms', meta?: { __typename: 'ProjectsQueendomFarmsMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsQueendomFarmsProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, epicFuture?: { __typename: 'ProjectsEpicFuture', meta?: { __typename: 'ProjectsEpicFutureMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsEpicFutureProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, consolidatedConstructionSolutions?: { __typename: 'ProjectsConsolidatedConstructionSolutions', meta?: { __typename: 'ProjectsConsolidatedConstructionSolutionsMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsConsolidatedConstructionSolutionsProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, perfectlyDifferent?: { __typename: 'ProjectsPerfectlyDifferent', meta?: { __typename: 'ProjectsPerfectlyDifferentMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsPerfectlyDifferentProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null } };

export type ProjectsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ProjectsFilter>;
}>;


export type ProjectsConnectionQuery = { __typename?: 'Query', projectsConnection: { __typename?: 'ProjectsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'ProjectsConnectionEdges', cursor: string, node?: { __typename: 'Projects', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, logofolio?: { __typename: 'ProjectsLogofolio', meta?: { __typename: 'ProjectsLogofolioMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsLogofolioProject', title?: string | null, description?: string | null, image?: string | null, images?: { __typename: 'ProjectsLogofolioProjectImages', white?: string | null, black?: string | null } | null } | null> | null } | null, anaRose?: { __typename: 'ProjectsAnaRose', meta?: { __typename: 'ProjectsAnaRoseMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsAnaRoseProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, queendomFarms?: { __typename: 'ProjectsQueendomFarms', meta?: { __typename: 'ProjectsQueendomFarmsMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsQueendomFarmsProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, epicFuture?: { __typename: 'ProjectsEpicFuture', meta?: { __typename: 'ProjectsEpicFutureMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsEpicFutureProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, consolidatedConstructionSolutions?: { __typename: 'ProjectsConsolidatedConstructionSolutions', meta?: { __typename: 'ProjectsConsolidatedConstructionSolutionsMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsConsolidatedConstructionSolutionsProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null, perfectlyDifferent?: { __typename: 'ProjectsPerfectlyDifferent', meta?: { __typename: 'ProjectsPerfectlyDifferentMeta', title?: string | null, description?: string | null, speed?: number | null, url?: string | null } | null, project?: Array<{ __typename: 'ProjectsPerfectlyDifferentProject', title?: string | null, description?: string | null, image?: string | null } | null> | null } | null } | null } | null> | null } };

export const SettingPartsFragmentDoc = gql`
    fragment SettingParts on Setting {
  __typename
  siteSettings {
    __typename
    siteName
    siteOwner
  }
  preloader {
    __typename
    image
    alt
  }
  companyLogo {
    __typename
    image
    alt
  }
  social {
    __typename
    fb {
      __typename
      title
      link
    }
    ig {
      __typename
      title
      link
    }
    github {
      __typename
      title
      link
    }
    linkedin {
      __typename
      title
      link
    }
  }
}
    `;
export const NavigationPartsFragmentDoc = gql`
    fragment NavigationParts on Navigation {
  __typename
  navigationLinks {
    __typename
    link
    heading {
      __typename
      mainText
      subText
    }
    text
  }
  footerLinks {
    __typename
    text
    url
  }
  footerText {
    __typename
    text1
    text2
  }
}
    `;
export const HomePartsFragmentDoc = gql`
    fragment HomeParts on Home {
  __typename
  rotatingWords
  introLines {
    __typename
    line1
    line2
    line3
    line4
  }
  doorMessages {
    __typename
    message1
    message2
    message3
  }
  coreSystems {
    __typename
    title
    desc
    skills {
      __typename
      skill1
      skill2
      skill3
      skill4
      skill5
    }
  }
  fieldSystems {
    __typename
    title
    desc
    skills {
      __typename
      skill1
      skill2
      skill3
      skill4
      skill5
    }
  }
  combinedStatement {
    __typename
    statement1
    statement2
  }
  projectSection {
    __typename
    title
    projects {
      __typename
      image1
      url1
      image2
      url2
      image3
      url3
      image4
      url4
    }
    viewAllLink {
      __typename
      text
      url
    }
  }
  quote {
    __typename
    lines {
      __typename
      line
    }
    attribution {
      __typename
      signature
      source
    }
  }
  timedQuote {
    __typename
    quoteParts {
      __typename
      text
      delay
    }
  }
  contact {
    __typename
    link
    buttonText
  }
}
    `;
export const ProjectsPartsFragmentDoc = gql`
    fragment ProjectsParts on Projects {
  __typename
  logofolio {
    __typename
    meta {
      __typename
      title
      description
      speed
      url
    }
    project {
      __typename
      title
      description
      images {
        __typename
        white
        black
      }
      image
    }
  }
  anaRose {
    __typename
    meta {
      __typename
      title
      description
      speed
      url
    }
    project {
      __typename
      title
      description
      image
    }
  }
  queendomFarms {
    __typename
    meta {
      __typename
      title
      description
      speed
      url
    }
    project {
      __typename
      title
      description
      image
    }
  }
  epicFuture {
    __typename
    meta {
      __typename
      title
      description
      speed
      url
    }
    project {
      __typename
      title
      description
      image
    }
  }
  consolidatedConstructionSolutions {
    __typename
    meta {
      __typename
      title
      description
      speed
      url
    }
    project {
      __typename
      title
      description
      image
    }
  }
  perfectlyDifferent {
    __typename
    meta {
      __typename
      title
      description
      speed
      url
    }
    project {
      __typename
      title
      description
      image
    }
  }
}
    `;
export const SettingDocument = gql`
    query setting($relativePath: String!) {
  setting(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...SettingParts
  }
}
    ${SettingPartsFragmentDoc}`;
export const SettingConnectionDocument = gql`
    query settingConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: SettingFilter) {
  settingConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...SettingParts
      }
    }
  }
}
    ${SettingPartsFragmentDoc}`;
export const NavigationDocument = gql`
    query navigation($relativePath: String!) {
  navigation(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...NavigationParts
  }
}
    ${NavigationPartsFragmentDoc}`;
export const NavigationConnectionDocument = gql`
    query navigationConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: NavigationFilter) {
  navigationConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...NavigationParts
      }
    }
  }
}
    ${NavigationPartsFragmentDoc}`;
export const HomeDocument = gql`
    query home($relativePath: String!) {
  home(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...HomeParts
  }
}
    ${HomePartsFragmentDoc}`;
export const HomeConnectionDocument = gql`
    query homeConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: HomeFilter) {
  homeConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...HomeParts
      }
    }
  }
}
    ${HomePartsFragmentDoc}`;
export const ProjectsDocument = gql`
    query projects($relativePath: String!) {
  projects(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...ProjectsParts
  }
}
    ${ProjectsPartsFragmentDoc}`;
export const ProjectsConnectionDocument = gql`
    query projectsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: ProjectsFilter) {
  projectsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...ProjectsParts
      }
    }
  }
}
    ${ProjectsPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      setting(variables: SettingQueryVariables, options?: C): Promise<{data: SettingQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SettingQueryVariables, query: string}> {
        return requester<{data: SettingQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SettingQueryVariables, query: string}, SettingQueryVariables>(SettingDocument, variables, options);
      },
    settingConnection(variables?: SettingConnectionQueryVariables, options?: C): Promise<{data: SettingConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SettingConnectionQueryVariables, query: string}> {
        return requester<{data: SettingConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SettingConnectionQueryVariables, query: string}, SettingConnectionQueryVariables>(SettingConnectionDocument, variables, options);
      },
    navigation(variables: NavigationQueryVariables, options?: C): Promise<{data: NavigationQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: NavigationQueryVariables, query: string}> {
        return requester<{data: NavigationQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: NavigationQueryVariables, query: string}, NavigationQueryVariables>(NavigationDocument, variables, options);
      },
    navigationConnection(variables?: NavigationConnectionQueryVariables, options?: C): Promise<{data: NavigationConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: NavigationConnectionQueryVariables, query: string}> {
        return requester<{data: NavigationConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: NavigationConnectionQueryVariables, query: string}, NavigationConnectionQueryVariables>(NavigationConnectionDocument, variables, options);
      },
    home(variables: HomeQueryVariables, options?: C): Promise<{data: HomeQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: HomeQueryVariables, query: string}> {
        return requester<{data: HomeQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: HomeQueryVariables, query: string}, HomeQueryVariables>(HomeDocument, variables, options);
      },
    homeConnection(variables?: HomeConnectionQueryVariables, options?: C): Promise<{data: HomeConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: HomeConnectionQueryVariables, query: string}> {
        return requester<{data: HomeConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: HomeConnectionQueryVariables, query: string}, HomeConnectionQueryVariables>(HomeConnectionDocument, variables, options);
      },
    projects(variables: ProjectsQueryVariables, options?: C): Promise<{data: ProjectsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ProjectsQueryVariables, query: string}> {
        return requester<{data: ProjectsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ProjectsQueryVariables, query: string}, ProjectsQueryVariables>(ProjectsDocument, variables, options);
      },
    projectsConnection(variables?: ProjectsConnectionQueryVariables, options?: C): Promise<{data: ProjectsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ProjectsConnectionQueryVariables, query: string}> {
        return requester<{data: ProjectsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ProjectsConnectionQueryVariables, query: string}, ProjectsConnectionQueryVariables>(ProjectsConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (
  client: TinaClient,
) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: {
      branch?: string,
      /**
       * Aside from `method` and `body`, all fetch options are passed
       * through to underlying fetch request
       */
      fetchOptions?: Omit<Parameters<typeof fetch>[1], 'body' | 'method'>,
    },
    client
  ) => Promise<any> = async (doc, vars, options) => {
    let url = client.apiUrl
    if (options?.branch) {
      const index = client.apiUrl.lastIndexOf('/')
      url = client.apiUrl.substring(0, index + 1) + options.branch
    }
    const data = await client.request({
      query: doc,
      variables: vars,
      url,
    }, options)

    return { data: data?.data, errors: data?.errors, query: doc, variables: vars || {} }
  }

  return requester
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(
      createClient({
        url: "http://localhost:4001/graphql",
        queries,
      })
    )
  )

export const queries = (
  client: TinaClient,
) => {
  const requester = generateRequester(client)
  return getSdk(requester)
}

  